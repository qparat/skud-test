#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è requirements.txt
"""

def test_requirements():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞ requirements.txt"""
    with open('requirements.txt', 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt:")
    print(f"  –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(lines)}")
    
    valid_packages = []
    invalid_lines = []
    
    for i, line in enumerate(lines, 1):
        line = line.strip()
        if not line:  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
            continue
            
        if line.startswith('#'):  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            continue
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–∞–∫–µ—Ç–∞
        if '>=' in line:
            package_name = line.split('>=')[0]
            version = line.split('>=')[1]
            if package_name and version:
                valid_packages.append(line)
                print(f"  ‚úÖ {line}")
            else:
                invalid_lines.append((i, line))
                print(f"  ‚ùå –°—Ç—Ä–æ–∫–∞ {i}: {line}")
        else:
            invalid_lines.append((i, line))
            print(f"  ‚ùå –°—Ç—Ä–æ–∫–∞ {i}: {line}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"  –í–∞–ª–∏–¥–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤: {len(valid_packages)}")
    print(f"  –ù–µ–≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Ç—Ä–æ–∫: {len(invalid_lines)}")
    
    if invalid_lines:
        print(f"\n‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Å—Ç—Ä–æ–∫–∞—Ö: {[line[0] for line in invalid_lines]}")
        return False
    else:
        print(f"\n‚úÖ –§–∞–π–ª requirements.txt –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")
        return True

if __name__ == "__main__":
    test_requirements()