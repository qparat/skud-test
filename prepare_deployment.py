#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ SSH —Å–µ—Ä–≤–µ—Ä–µ
"""

import os
import shutil
import zipfile
from pathlib import Path

def create_deployment_package():
    """–°–æ–∑–¥–∞–µ—Ç –ø–∞–∫–µ—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ SSH —Å–µ—Ä–≤–µ—Ä–µ"""
    
    print("üì¶ –°–û–ó–î–ê–ù–ò–ï –ü–ê–ö–ï–¢–ê –î–õ–Ø –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    deploy_dir = Path("deploy_package")
    if deploy_dir.exists():
        shutil.rmtree(deploy_dir)
    deploy_dir.mkdir()
    
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {deploy_dir}")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    files_to_copy = [
        "main_real_skud.py",
        "real_skud_config.ini", 
        "skud_monitor.py",
        "interactive_monitor.py",
        "minute_monitor.py",
        "employee_editor.py",
        "setup_production_sqlite.py",
        "requirements.txt"
    ]
    
    # –ü–∞–ø–∫–∏ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    dirs_to_copy = [
        "src",
        "real_data_input"
    ]
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
    print("\nüìÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤:")
    for file_name in files_to_copy:
        if os.path.exists(file_name):
            shutil.copy2(file_name, deploy_dir)
            print(f"   ‚úÖ {file_name}")
        else:
            print(f"   ‚ùå {file_name} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫–∏
    print("\nüìÇ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫:")
    for dir_name in dirs_to_copy:
        if os.path.exists(dir_name):
            shutil.copytree(dir_name, deploy_dir / dir_name)
            print(f"   ‚úÖ {dir_name}/")
        else:
            print(f"   ‚ùå {dir_name}/ (–Ω–µ –Ω–∞–π–¥–µ–Ω–∞)")
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞ –¥–ª—è Linux
    create_linux_scripts(deploy_dir)
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    create_archive(deploy_dir)
    
    print(f"\nüéâ –ü–∞–∫–µ—Ç –≥–æ—Ç–æ–≤ –≤ –ø–∞–ø–∫–µ: {deploy_dir}")
    print(f"üì¶ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: deploy_package.zip")

def create_linux_scripts(deploy_dir):
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç—ã –∑–∞–ø—É—Å–∫–∞ –¥–ª—è Linux"""
    
    print("\nüêß –°–æ–∑–¥–∞–Ω–∏–µ Linux —Å–∫—Ä–∏–ø—Ç–æ–≤:")
    
    # –°–∫—Ä–∏–ø—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    activate_script = """#!/bin/bash
# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –°–ö–£–î

cd "$(dirname "$0")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ ! -d "venv" ]; then
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
    echo "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: bash deploy_ssh.sh"
    exit 1
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source venv/bin/activate

echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
echo "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
"""
    
    with open(deploy_dir / "activate.sh", "w", encoding="utf-8") as f:
        f.write(activate_script)
    os.chmod(deploy_dir / "activate.sh", 0o755)
    print("   ‚úÖ activate.sh")
    
    # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    main_script = """#!/bin/bash
# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –°–ö–£–î

cd "$(dirname "$0")"
source venv/bin/activate

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –°–ö–£–î..."
python3 main_real_skud.py
"""
    
    with open(deploy_dir / "start_skud.sh", "w", encoding="utf-8") as f:
        f.write(main_script)
    os.chmod(deploy_dir / "start_skud.sh", 0o755)
    print("   ‚úÖ start_skud.sh")
    
    # –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    monitor_script = """#!/bin/bash
# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –°–ö–£–î

cd "$(dirname "$0")"
source venv/bin/activate

case "$1" in
    "basic")
        echo "üìä –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        python3 skud_monitor.py
        ;;
    "interactive")
        echo "üîç –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        python3 interactive_monitor.py
        ;;
    "realtime")
        echo "‚è±Ô∏è –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏..."
        python3 minute_monitor.py
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {basic|interactive|realtime}"
        echo ""
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã:"
        echo "  basic       - –ë–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
        echo "  interactive - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑"
        echo "  realtime    - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        exit 1
        ;;
esac
"""
    
    with open(deploy_dir / "monitor.sh", "w", encoding="utf-8") as f:
        f.write(monitor_script)
    os.chmod(deploy_dir / "monitor.sh", 0o755)
    print("   ‚úÖ monitor.sh")
    
    # –°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ë–î
    optimize_script = """#!/bin/bash
# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –°–ö–£–î

cd "$(dirname "$0")"
source venv/bin/activate

echo "üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
python3 setup_production_sqlite.py
"""
    
    with open(deploy_dir / "optimize_db.sh", "w", encoding="utf-8") as f:
        f.write(optimize_script)
    os.chmod(deploy_dir / "optimize_db.sh", 0o755)
    print("   ‚úÖ optimize_db.sh")
    
    # Systemd —Å–µ—Ä–≤–∏—Å
    service_script = """[Unit]
Description=SKUD Monitoring System
After=network.target

[Service]
Type=simple
User=ubuntu
WorkingDirectory=/home/ubuntu/skud_system
ExecStart=/home/ubuntu/skud_system/venv/bin/python /home/ubuntu/skud_system/main_real_skud.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
"""
    
    with open(deploy_dir / "skud.service", "w", encoding="utf-8") as f:
        f.write(service_script)
    print("   ‚úÖ skud.service")

def create_archive(deploy_dir):
    """–°–æ–∑–¥–∞–µ—Ç ZIP –∞—Ä—Ö–∏–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏"""
    
    with zipfile.ZipFile("deploy_package.zip", "w", zipfile.ZIP_DEFLATED) as zipf:
        for root, dirs, files in os.walk(deploy_dir):
            for file in files:
                file_path = os.path.join(root, file)
                arcname = os.path.relpath(file_path, deploy_dir)
                zipf.write(file_path, arcname)

def create_deployment_instructions():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é"""
    
    instructions = """# üöÄ –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ –°–ò–°–¢–ï–ú–´ –°–ö–£–î –ù–ê SSH –°–ï–†–í–ï–†–ï

## üìã –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ

### 1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞

```bash
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
sudo apt install -y python3 python3-pip python3-venv sqlite3

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
sudo useradd -m -s /bin/bash skud
sudo usermod -aG sudo skud
```

### 2. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤

```bash
# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p ~/skud_system
cd ~/skud_system

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤):

# –°–ø–æ—Å–æ–± 1: —á–µ—Ä–µ–∑ scp
scp deploy_package.zip user@server:~/skud_system/

# –°–ø–æ—Å–æ–± 2: —á–µ—Ä–µ–∑ git clone (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)
git clone <–≤–∞—à_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π> .

# –°–ø–æ—Å–æ–± 3: —á–µ—Ä–µ–∑ wget (–µ—Å–ª–∏ —Ñ–∞–π–ª—ã –Ω–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–µ)
wget <—Å—Å—ã–ª–∫–∞_–Ω–∞_–∞—Ä—Ö–∏–≤>

# –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞
unzip deploy_package.zip
```

### 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è

```bash
# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
python3 -m venv venv

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
source venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
pip install -r requirements.txt

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫
mkdir -p real_data_input backups logs
```

### 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ (systemd)

```bash
# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–∏—Å–∞
sudo cp skud.service /etc/systemd/system/

# –ü—Ä–∞–≤–∫–∞ –ø—É—Ç–µ–π –≤ —Å–µ—Ä–≤–∏—Å–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
sudo nano /etc/systemd/system/skud.service

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd
sudo systemctl daemon-reload

# –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
sudo systemctl enable skud.service

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
sudo systemctl start skud.service

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
sudo systemctl status skud.service
```

### 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

```bash
# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤
sudo mkdir -p /var/log/skud
sudo chown $USER:$USER /var/log/skud

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
sudo nano /etc/logrotate.d/skud
```

–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ logrotate:
```
/var/log/skud/*.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    create 644 skud skud
}
```

## üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

```bash
# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
source venv/bin/activate

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
./start_skud.sh

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
./monitor.sh basic        # –ë–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
./monitor.sh interactive  # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑
./monitor.sh realtime     # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ë–î
./optimize_db.sh

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º
sudo systemctl start skud     # –ó–∞–ø—É—Å–∫
sudo systemctl stop skud      # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
sudo systemctl restart skud   # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
sudo systemctl status skud    # –°—Ç–∞—Ç—É—Å
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã

```bash
# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
tail -f logs/skud_system.log

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–∏—Å–∞
sudo journalctl -u skud -f

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
ps aux | grep python

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
htop
```

## üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

### –§–∞–π–ª `real_skud_config.ini`

```ini
[MONITORING]
watch_directory = real_data_input
check_interval = 30
backup_enabled = true

[DATABASE]
db_file = real_skud_data.db
wal_mode = true

[FILTERING]
exclude_employees = –û—Ö—Ä–∞–Ω–∞ –ú., 1 –ø–æ—Å—Ç –æ., 2 –ø–æ—Å—Ç –æ., –ö—Ä—ã—à–∞ –ö.
exclude_doors = –≤—ã—Ö–æ–¥ –ø–∞—Ä–∫–∏–Ω–≥, 1—ç—Ç —Å–µ—Ä–≤–µ—Ä–Ω–∞—è, –°—Ç—É–¥–∏—è - –≤–Ω.–º–∏—Ä

[LOGGING]
level = INFO
log_to_file = true
log_file = logs/skud_system.log
```

## üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall

```bash
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ—Ä—Ç–æ–≤
sudo ufw allow ssh
sudo ufw enable
```

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH

```bash
# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SSH
sudo nano /etc/ssh/sshd_config

# –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
# Port 2222                    # –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç
# PermitRootLogin no          # –ó–∞–ø—Ä–µ—Ç –≤—Ö–æ–¥–∞ root
# PasswordAuthentication no   # –¢–æ–ª—å–∫–æ –∫–ª—é—á–∏
# PubkeyAuthentication yes    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –∫–ª—é—á–∞–º

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSH
sudo systemctl restart ssh
```

## üö® Troubleshooting

### –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã

1. **–û—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞**
   ```bash
   chmod +x *.sh
   chown -R $USER:$USER ~/skud_system
   ```

2. **–ü—Ä–æ–±–ª–µ–º—ã —Å Python**
   ```bash
   which python3
   python3 --version
   pip3 list
   ```

3. **–ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö**
   ```bash
   sqlite3 real_skud_data.db ".tables"
   ./optimize_db.sh
   ```

4. **–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º**
   ```bash
   sudo journalctl -u skud -n 50
   sudo systemctl daemon-reload
   sudo systemctl restart skud
   ```

## ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
ls -la ~/skud_system/

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
sqlite3 real_skud_data.db "SELECT COUNT(*) FROM employees;"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
./monitor.sh basic

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
sudo systemctl is-active skud
```

---

**üéâ –°–∏—Å—Ç–µ–º–∞ –°–ö–£–î –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!**
"""
    
    with open("DEPLOYMENT_INSTRUCTIONS.md", "w", encoding="utf-8") as f:
        f.write(instructions)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª DEPLOYMENT_INSTRUCTIONS.md")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    create_deployment_package()
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    create_deployment_instructions()
    
    print("\n" + "="*60)
    print("üéØ –ü–û–î–ì–û–¢–û–í–ö–ê –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("="*60)
    print("\nüì¶ –°–æ–∑–¥–∞–Ω –ø–∞–∫–µ—Ç: deploy_package/")
    print("üìÅ –°–æ–∑–¥–∞–Ω –∞—Ä—Ö–∏–≤: deploy_package.zip")
    print("üìã –°–æ–∑–¥–∞–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: DEPLOYMENT_INSTRUCTIONS.md")
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ deploy_package.zip –Ω–∞ SSH —Å–µ—Ä–≤–µ—Ä")
    print("2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ DEPLOYMENT_INSTRUCTIONS.md")
    print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ systemd")
    print("\nüí° –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä:")
    print("   scp deploy_package.zip user@server:~/")
    print("   scp DEPLOYMENT_INSTRUCTIONS.md user@server:~/")

if __name__ == "__main__":
    main()