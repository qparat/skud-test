#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü PostgreSQL –¥–ª—è –°–ö–£–î —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import os
sys.path.append(os.path.dirname(__file__))

from database_integrator import SkudDatabaseIntegrator
import configparser

def create_postgresql_database():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–∞–±–ª–∏—Ü—ã –≤ PostgreSQL"""
    
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL –¥–ª—è –°–ö–£–î —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PostgreSQL
    config = configparser.ConfigParser()
    config.read('postgres_config.ini', encoding='utf-8')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL
    pg_config = {
        'host': config.get('DATABASE', 'host', fallback='localhost'),
        'port': config.getint('DATABASE', 'port', fallback=5432),
        'database': config.get('DATABASE', 'database', fallback='skud_db'),
        'user': config.get('DATABASE', 'user', fallback='postgres'),
        'password': config.get('DATABASE', 'password', fallback='password')
    }
    
    print(f"üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL: {pg_config['host']}:{pg_config['port']}/{pg_config['database']}")
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä –¥–ª—è PostgreSQL
    integrator = SkudDatabaseIntegrator(db_type="postgresql", **pg_config)
    
    if not integrator.connect():
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL!")
        return False
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å–ø–µ—à–Ω–æ!")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    if integrator.create_test_tables():
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã PostgreSQL —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏
        dept_id, pos_id = integrator.get_or_create_unknown_ids()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã –±–∞–∑–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ (Department ID: {dept_id}, Position ID: {pos_id})")
        
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("\n–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã:")
        print("  - departments (–æ—Ç–¥–µ–ª—ã)")
        print("  - positions (–¥–æ–ª–∂–Ω–æ—Å—Ç–∏)")
        print("  - employees (—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏)")
        print("  - access_logs (–ª–æ–≥–∏ –¥–æ—Å—Ç—É–ø–∞)")
        print("  - employee_exceptions (–∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)")
        
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü PostgreSQL!")
        return False

if __name__ == "__main__":
    if create_postgresql_database():
        print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üîÑ –¢–µ–ø–µ—Ä—å –ø–∞—Ä—Å–µ—Ä –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PostgreSQL –≤–º–µ—Å—Ç–æ SQLite")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL!")
        sys.exit(1)